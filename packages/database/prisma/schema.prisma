generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // url               = env("VITE_DATABASE_URL") // PROD
  url          = env("LOCAL_DATABASE_URL") // DEV
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
}

model TruckSuiteSalesRepresentative {
  id        Int                @id @default(autoincrement())
  publicId  String             @unique @map("public_id") @db.VarChar(12)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  userId    String?
  firstName String
  lastName  String
  email     String
  phone     String
  address   String
  city      String
  state     String
  zip       String
  country   String
  locations ProducerLocation[]
  producers Producer[]
}

model Producer {
  id                              Int                            @id @default(autoincrement())
  publicId                        String                         @unique @map("public_id") @db.VarChar(12)
  createdAt                       DateTime                       @default(now())
  updatedAt                       DateTime                       @updatedAt
  name                            String
  dba                             String?
  taxId                           String?
  website                         String?
  address                         String
  city                            String
  state                           String
  zip                             String
  country                         String
  primaryContactName              String
  primaryContactTitle             String?
  primaryContactPhone             String
  primaryContactEmail             String
  status                          ProducerStatus                 @default(STARTED)
  logoUrl                         String?
  locations                       ProducerLocation[]
  admins                          ProducerAdmin[]
  producerAgreementId             String?
  truckSuiteSalesRepresentative   TruckSuiteSalesRepresentative? @relation(fields: [truckSuiteSalesRepresentativeId], references: [id])
  truckSuiteSalesRepresentativeId Int?

  @@index([publicId])
  @@index([name])
  @@index([dba])
  @@index([city])
  @@index([state])
  @@index([producerAgreementId])
  @@index([truckSuiteSalesRepresentativeId])
}

model ProducerLocation {
  id                              Int                                   @id @default(autoincrement())
  publicId                        String                                @unique @map("public_id") @db.VarChar(12)
  createdAt                       DateTime                              @default(now())
  updatedAt                       DateTime                              @updatedAt
  name                            String
  phone                           String
  email                           String
  website                         String?
  address                         String
  city                            String
  state                           String
  zip                             String
  country                         String
  mailingAddress                  String?
  mailingCity                     String?
  mailingState                    String?
  mailingZip                      String?
  mailingCountry                  String?
  main                            Boolean                               @default(false)
  inspectionRequired              Boolean                               @default(false)
  type                            LocationType                          @default(DEALERSHIP)
  producerId                      Int?
  producer                        Producer?                             @relation(fields: [producerId], references: [id], onDelete: SetNull)
  assignedWarrantyProducts        LocationWarrantyProductAssigned[]
  contacts                        LocationContact[]
  notes                           LocationNote[]
  rateOutputs                     LocationWarrantyRatesheetRateOutput[]
  producerAdmins                  ProducerAdmin[]
  customerSales                   CustomerSale[]
  invoices                        CustomerSaleInvoice[]
  invoicePayments                 LocationInvoicePayment[]
  truckSuiteSalesRepresentative   TruckSuiteSalesRepresentative?        @relation(fields: [truckSuiteSalesRepresentativeId], references: [id])
  truckSuiteSalesRepresentativeId Int?

  @@index([producerId])
  @@index([name])
  @@index([truckSuiteSalesRepresentativeId])
}

model LocationWarrantyProductAssigned {
  id                                  Int                                   @id @default(autoincrement())
  publicId                            String                                @unique @map("public_id") @db.VarChar(12)
  createdAt                           DateTime                              @default(now())
  updatedAt                           DateTime                              @updatedAt
  warrantyProductId                   Int
  warrantyProduct                     WarrantyProduct                       @relation(fields: [warrantyProductId], references: [id])
  locationId                          Int
  location                            ProducerLocation                      @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationMarkups                     LocationWarrantyProductMarkup[]
  locationwarrantyRatesheetRateOutput LocationWarrantyRatesheetRateOutput[]
  warrantyProductSelected             WarrantyProductSelected[]
  // warrantyProductTerms WarrantyProductTerm[]
  // warrantyProductOptions WarrantyProductOption[]

  @@index([locationId])
  @@index([warrantyProductId])
}

model LocationWarrantyProductMarkup {
  id                                Int                                 @id @default(autoincrement())
  publicId                          String                              @unique @map("public_id") @db.VarChar(12)
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
  termValue                         Int
  termUnit                          TermUnits
  markupValue                       Int
  locationWarrantyProductAssignedId Int
  locationWarrantyProductAssigned   LocationWarrantyProductAssigned     @relation(fields: [locationWarrantyProductAssignedId], references: [id], onDelete: Cascade)
  locationRatesheetRateOutputId     Int
  locationRatesheetRateOutput       LocationWarrantyRatesheetRateOutput @relation(fields: [locationRatesheetRateOutputId], references: [id])

  @@index([locationWarrantyProductAssignedId])
  @@index([locationRatesheetRateOutputId])
}

model LocationNote {
  id         Int              @id @default(autoincrement())
  publicId   String           @unique @map("public_id") @db.VarChar(12)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  note       String           @db.LongText
  type       LocationNoteType
  locationId Int
  location   ProducerLocation @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@index([locationId])
}

model LocationContact {
  id         Int               @id @default(autoincrement())
  publicId   String            @unique @map("public_id") @db.VarChar(12)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  firstName  String
  lastName   String
  email      String
  phone      String?
  role       String?
  locationId Int
  location   ProducerLocation? @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@unique([email])
  @@index([locationId])
}

model ProducerAdmin {
  id            Int                   @id @default(autoincrement())
  publicId      String                @unique @map("public_id") @db.VarChar(12)
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  userId        String?
  firstName     String
  lastName      String
  email         String
  phone         String?
  producerId    Int
  producer      Producer              @relation(fields: [producerId], references: [id], onDelete: Cascade)
  locations     ProducerLocation[]
  customerSales CustomerSale[]
  invoices      CustomerSaleInvoice[]

  @@unique([email, producerId])
  @@index([producerId])
}

model WarrantyRatesheet {
  id               Int                                   @id @default(autoincrement())
  publicId         String                                @unique @map("public_id") @db.VarChar(12)
  createdAt        DateTime                              @default(now())
  updatedAt        DateTime                              @updatedAt
  name             String                                @unique
  title            String
  subtitle         String                                @db.Text
  lowMileageCutoff Int?
  isVocational     Boolean?                              @default(false)
  rows             WarrantyRatesheetRow[]
  vocationalRows   WarrantyVocationalRatesheetRow[]
  options          WarrantyRatesheetOption[]
  disclosures      WarrantyRatesheetDisclosure[]
  coverages        WarrantyRatesheetCoverage[]
  rateOutputs      LocationWarrantyRatesheetRateOutput[]

  @@index([name])
}

model WarrantyRatesheetRow {
  id             Int               @id @default(autoincrement())
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  termValue      Int
  termUnit       TermUnits
  mileageValue   Int
  nlm            Int?
  nhm            Int?
  olm            Int?
  ohm            Int?
  deductible     Int
  aggregateLimit Int
  ratesheetId    Int
  ratesheet      WarrantyRatesheet @relation(fields: [ratesheetId], references: [id])

  @@index([ratesheetId])
}

model WarrantyVocationalRatesheetRow {
  id             Int               @id @default(autoincrement())
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  termValue      Int
  termUnit       TermUnits
  mileageValue   Int
  rate           Int?
  deductible     Int
  aggregateLimit Int
  vocationalType String
  ratesheetId    Int
  ratesheet      WarrantyRatesheet @relation(fields: [ratesheetId], references: [id])

  @@index([ratesheetId])
}

model WarrantyRatesheetOption {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  packageName        String
  termValue          Int
  termUnit           TermUnits
  cost               Int
  refrigerationHours String?             @default("")
  ratesheets         WarrantyRatesheet[]
}

model WarrantyRatesheetDisclosure {
  id          Int                 @id @default(autoincrement())
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  title       String
  description String              @db.Text
  order       Int
  ratesheets  WarrantyRatesheet[]
}

model WarrantyRatesheetCoverage {
  id          Int                 @id @default(autoincrement())
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  title       String
  description String              @db.Text
  order       Int
  ratesheets  WarrantyRatesheet[]
}

model LocationWarrantyRatesheetRateOutput {
  id                                Int                             @id @default(autoincrement())
  publicId                          String                          @unique @map("public_id") @db.VarChar(12)
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt
  label                             String                          @default("")
  color                             String                          @default("primary")
  logoUrl                           String?
  producerLocationId                Int
  producerLocation                  ProducerLocation                @relation(fields: [producerLocationId], references: [id])
  ratesheetId                       Int
  ratesheet                         WarrantyRatesheet               @relation(fields: [ratesheetId], references: [id])
  markups                           LocationWarrantyProductMarkup[]
  locationWarrantyProductAssignedId Int
  locationWarrantyProductAssigned   LocationWarrantyProductAssigned @relation(fields: [locationWarrantyProductAssignedId], references: [id])

  @@index([producerLocationId])
  @@index([ratesheetId])
  @@index([locationWarrantyProductAssignedId])
}

model WarrantyProductCategory {
  id               Int               @id @default(autoincrement())
  publicId         String            @unique @map("public_id") @db.VarChar(12)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  name             String
  warrantyProducts WarrantyProduct[]
}

model WarrantyProduct {
  id                              Int                               @id @default(autoincrement())
  publicId                        String                            @unique @map("public_id") @db.VarChar(12)
  createdAt                       DateTime                          @default(now())
  updatedAt                       DateTime                          @updatedAt
  name                            String
  fuelType                        FuelType
  warrantyProductCategoryId       Int
  warrantyProductCategory         WarrantyProductCategory           @relation(fields: [warrantyProductCategoryId], references: [id])
  warrantyAgreementId             Int
  warrantyAgreement               WarrantyAgreement                 @relation(fields: [warrantyAgreementId], references: [id])
  warrantyTerms                   WarrantyTerm[]
  warrantyOptions                 WarrantyOption[]
  locationWarrantyProductAssigned LocationWarrantyProductAssigned[]

  @@index([warrantyProductCategoryId])
  @@index([warrantyAgreementId])
}

model WarrantyAgreement {
  id                      Int                       @id @default(autoincrement())
  publicId                String                    @unique @map("public_id") @db.VarChar(12)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  url                     String
  warrantyProductId       Int
  warrantyProduct         WarrantyProduct[]
  version                 String
  warrantySignedAgreement WarrantySignedAgreement[]
}

model WarrantyTerm {
  id                    Int                    @id @default(autoincrement())
  publicId              String                 @unique @map("public_id") @db.VarChar(12)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  termValue             Int
  termUnit              TermUnits
  mileageValue          Int
  mileageUnit           MileageUnits
  warrantyTermsSelected WarrantyTermSelected[]
  warrantyProductId     Int
  warrantyProduct       WarrantyProduct        @relation(fields: [warrantyProductId], references: [id])

  @@index([warrantyProductId])
}

model WarrantyOption {
  id                     Int                       @id @default(autoincrement())
  publicId               String                    @unique @map("public_id") @db.VarChar(12)
  createdAt              DateTime                  @default(now())
  updatedAt              DateTime                  @updatedAt
  name                   String
  termValue              Int
  termUnit               TermUnits
  warrantyOptionSelected WarrantyOptionsSelected[]
  warrantyProductId      Int
  warrantyProduct        WarrantyProduct           @relation(fields: [warrantyProductId], references: [id])

  @@index([warrantyProductId])
}

model Customer {
  id           Int            @id @default(autoincrement())
  publicId     String         @unique @map("public_id") @db.VarChar(12)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  firstName    String
  lastName     String
  email        String
  phone        String
  address      String
  city         String
  state        String
  zip          String
  country      String
  trucks       Truck[]
  customerSale CustomerSale[]
}

model Truck {
  id                Int              @id @default(autoincrement())
  publicId          String           @unique @map("public_id") @db.VarChar(12)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  vin               String
  odometer          Int
  odometerUnit      MileageUnits
  ecm               Int
  ecmUnits          MileageUnits
  year              Int
  make              String
  model             String
  engineMakeModel   String
  engineSerialNum   String
  gvwr              String
  vehicleType       String
  fuelType          String
  apuMake           String?
  apuSerialNum      String?
  apuHours          Int?
  customerId        Int
  customer          Customer         @relation(fields: [customerId], references: [id])
  truckLienholderId Int?
  truckLienholder   TruckLienholder?
  customerSale      CustomerSale[]

  @@index([customerId])
}

model TruckLienholder {
  id           Int            @id @default(autoincrement())
  publicId     String         @unique @map("public_id") @db.VarChar(12)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  name         String
  email        String
  phone        String
  address      String
  city         String
  state        String
  zip          String
  country      String
  truckId      Int            @unique
  truck        Truck          @relation(fields: [truckId], references: [id])
  customerSale CustomerSale[]

  @@index([truckId])
}

// 🔥🔥🔥🔥👇 start here
model CustomerSale {
  id                               Int                      @id @default(autoincrement())
  publicId                         String                   @unique @map("public_id") @db.VarChar(12)
  createdAt                        DateTime                 @default(now())
  updatedAt                        DateTime                 @updatedAt
  customerId                       Int
  customer                         Customer                 @relation(fields: [customerId], references: [id])
  truckId                          Int
  truck                            Truck                    @relation(fields: [truckId], references: [id])
  lienholderId                     Int?
  lienholder                       TruckLienholder?         @relation(fields: [lienholderId], references: [id])
  warrantyProductSelectedId        Int
  warrantyProductSelected          WarrantyProductSelected  @relation(fields: [warrantyProductSelectedId], references: [id])
  saleDate                         DateTime
  includedInRetailPrice            Boolean                  @default(false)
  financedDeal                     Boolean                  @default(false)
  quotedSalePrice                  Int
  finalRetailWarrantyPurchasePrice Int
  saleCurrency                     String
  savedAsQuote                     Boolean                  @default(false)
  customerHasDeclined              Boolean                  @default(false)
  downPaymentAmount                Int?
  customerSaleDownPaymentId        Int?                     @unique
  customerSaleDownPayment          CustomerSaleDownPayment?
  customerSummaryOrDeclinationUrl  String?
  customerSaleInvoiceId            Int                      @unique
  customerSaleInvoice              CustomerSaleInvoice?
  customerSaleStatus               CustomerSaleStatus
  signedAgreementId                Int?
  signedAgreement                  WarrantySignedAgreement? @relation(fields: [signedAgreementId], references: [id])
  producerLocation                 ProducerLocation         @relation(fields: [producerLocationId], references: [id])
  producerLocationId               Int
  producerAdmin                    ProducerAdmin            @relation(fields: [producerAdminId], references: [id])
  producerAdminId                  Int

  @@index([producerLocationId])
  @@index([producerAdminId])
  @@index([signedAgreementId])
  @@index([customerId])
  @@index([truckId])
  @@index([lienholderId])
  @@index([warrantyProductSelectedId])
}

model WarrantyProductSelected {
  id                                Int                             @id @default(autoincrement())
  publicId                          String                          @unique @map("public_id") @db.VarChar(12)
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt
  locationWarrantyProductAssignedId Int
  locationWarrantyProductAssigned   LocationWarrantyProductAssigned @relation(fields: [locationWarrantyProductAssignedId], references: [id])
  termSelected                      WarrantyTermSelected?
  optionsSelected                   WarrantyOptionsSelected[]
  customerSale                      CustomerSale[]

  @@index([locationWarrantyProductAssignedId])
}

model WarrantySignedAgreement {
  id                  Int               @id @default(autoincrement())
  publicId            String            @unique @map("public_id") @db.VarChar(12)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  warrantyAgreementId Int
  warrantyAgreement   WarrantyAgreement @relation(fields: [warrantyAgreementId], references: [id])
  abodeSignId         String?
  url                 String?
  CustomerSale        CustomerSale[]

  @@index([warrantyAgreementId])
}

model WarrantyTermSelected {
  id                        Int                     @id @default(autoincrement())
  publicId                  String                  @unique @map("public_id") @db.VarChar(12)
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  warrantyTermId            Int
  warrantyTerm              WarrantyTerm            @relation(fields: [warrantyTermId], references: [id])
  warrantyProductSelectedId Int                     @unique
  warrantyProductSelected   WarrantyProductSelected @relation(fields: [warrantyProductSelectedId], references: [id])

  @@index([warrantyTermId])
}

model WarrantyOptionsSelected {
  id                        Int                     @id @default(autoincrement())
  publicId                  String                  @unique @map("public_id") @db.VarChar(12)
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  warrantyOptions           WarrantyOption[]
  warrantyProductSelectedId Int                     @unique
  warrantyProductSelected   WarrantyProductSelected @relation(fields: [warrantyProductSelectedId], references: [id])
}

model CustomerSaleDownPayment {
  id                             Int           @id @default(autoincrement())
  publicId                       String        @unique @map("public_id") @db.VarChar(12)
  createdAt                      DateTime      @default(now())
  updatedAt                      DateTime      @updatedAt
  paymentAuthorized              Boolean       @default(false)
  paymentMethod                  PaymentMethod
  paymentDate                    DateTime
  paymentReferenceId             String?
  paymentAmountCollectedByDealer Int?
  customerSaleId                 Int           @unique
  customerSale                   CustomerSale  @relation(fields: [customerSaleId], references: [id])
}

model CustomerSaleInvoice {
  id                       Int                     @id @default(autoincrement())
  publicId                 String                  @unique @map("public_id") @db.VarChar(12)
  createdAt                DateTime                @default(now())
  updatedAt                DateTime                @updatedAt
  customerSaleId           Int                     @unique
  customerSale             CustomerSale            @relation(fields: [customerSaleId], references: [id])
  invoiceStatus            InvoiceStatus
  producerLocationId       Int
  producerLocation         ProducerLocation        @relation(fields: [producerLocationId], references: [id])
  // otherSaleId    String
  // OtherSale      OtherSale?    @relation(fields: [otherSaleId], references: [id])
  // @@index([otherSaleId])
  producerAdmin            ProducerAdmin?          @relation(fields: [producerAdminId], references: [id])
  producerAdminId          Int?
  locationInvoicePayment   LocationInvoicePayment? @relation(fields: [locationInvoicePaymentId], references: [id])
  locationInvoicePaymentId Int?

  @@index([customerSaleId])
  @@index([producerLocationId])
  @@index([locationInvoicePaymentId])
  @@index([producerAdminId])
}

model LocationInvoicePayment {
  id                 Int                   @id @default(autoincrement())
  publicId           String                @unique @map("public_id") @db.VarChar(12)
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  invoices           CustomerSaleInvoice[]
  paymentMethod      PaymentMethod
  paymentDate        DateTime
  paymentAmount      Int
  producerLocation   ProducerLocation?     @relation(fields: [producerLocationId], references: [id])
  producerLocationId Int?

  @@index([producerLocationId])
}

// model CustomerSale {
//   id           Int             @id @default(autoincrement())
//   publicId     String             @unique @map("public_id") @db.VarChar(12)
//   createdAt    DateTime           @default(now())
//   updatedAt    DateTime           @updatedAt
//   customerSale CustomerSale[]
//   otherSale    OtherSale[]
//   status       CustomerSaleStatus
//   invoice      Invoice[]
// }

// model OtherSale {
//   id             Int       @id @default(autoincrement())
//   publicId       String       @unique @map("public_id") @db.VarChar(12)
//   createdAt      DateTime     @default(now())
//   updatedAt      DateTime     @updatedAt
//   customerSale   CustomerSale @relation(fields: [customerSaleId], references: [id])
//   invoice        Invoice[]
//   customerSaleId Int
// }

enum LocationType {
  DEALERSHIP
  REPAIR_SHOP
  LENDER
  FLEET
  ASSOCIATION
  TRAVEL_CENTER
  OTHER
}

enum TermUnits {
  DAYS
  MONTHS
  YEARS
}

enum MileageUnits {
  MILES
  KILOMETERS
}

enum WarrantyProductOptions {
  TRANSMISSION_AND_DIFFERENTIAL
  APU
  HVAC
  REFRIGERATION
}

enum PaymentMethod {
  CREDIT_CARD
  ACH
  CHECK
  WIRE
}

enum CustomerSaleStatus {
  IN_PROGRESS
  DECLINED
  QUOTE
  COMPLETED
}

enum CustomerAgreementStatus {
  ACTIVE // Agreement is active
  VOID // Agreement is inactive with a refund
  TERMINATED // Agreement is inactive without a refund
  EXPIRED // Agreement is inactive due to reaching the maximum mileage or term length
  MAXED_OUT // Agreement is inactive due to the full aggregate limit being reached
}

enum InvoiceStatus {
  PAID
  UNPAID
  PAID_DOWN // Invoice is for a downpayment
  DUE_SOON // Invoice is due within 5 days
  OVERDUE // Invoice is past due
}

enum InvoicePaymentStatus {
  RECEIVED // Invoice Payment has been completed
  PENDING // Invoice Payment is pending or in progress
  ON_HOLD // Invoice Payment is on hold for some reason
}

enum ProducerStatus {
  STARTED
  PENDING_REVIEW
  ACTIVE
  INACTIVE
}

enum LocationStatus {
  ACTIVE
  SUSPENDED
}

enum FuelType {
  DIESEL
  GAS
  ELECTRIC
}

enum LocationNoteType {
  CREATED
  SUSPENDED
  MANUAL
}

// model Producer {
//   Int                  String          @id @default(autoincrement())
//   createdAt           DateTime        @default(now())
//   updatedAt           DateTime        @updatedAt
//   name                String
//   dba                 String?
//   taxId               String?
//   website             String?
//   type                String
//   address             String
//   city                String
//   state               String
//   zip                 String
//   country             String         
//   primaryContactName  String
//   primaryContactTitle String?
//   primaryContactPhone String
//   primaryContactEmail String
//   tsSalesRepId        String
//   locations           ProducerLocation[]
//   status              ProducerStatus  @default(STARTED)
//   logoUrl             String?
//   producerAdmins      ProducerAdmin[]

//   @@index([name])
//   @@index([dba])
//   @@index([city])
//   @@index([state])
//   @@index([tsSalesRepId])
// }

// model ProducerAdmin {
//   Int            String         @id @default(autoincrement())
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt
//   email         String
//   firstName     String
//   lastName      String
//   phone         String?
//   producerId    String
//   producer      Producer       @relation(fields: [producerId], references: [id], onDelete: Cascade)
//   locations     ProducerLocation[]
//   customerSales CustomerSale[]
//   invoices      Invoice[]

//   @@unique([email, producerId])
//   @@index([producerId])
// }

// model ProducerLocation {
//   Int                  String               @id @default(autoincrement())
//   createdAt           DateTime             @default(now())
//   updatedAt           DateTime             @updatedAt
//   name                String
//   phone               String
//   email               String
//   website             String?
//   address             String
//   city                String
//   state               String
//   zip                 String
//   country             String              
//   mailingAddress      String?
//   mailingCity         String?
//   mailingState        String?
//   mailingZip          String?
//   mailingCountry      String?             
//   tsSalesRepId        String
//   producerId          String?
//   producer            Producer?            @relation(fields: [producerId], references: [id], onDelete: SetNull)
//   locationProducts    LocationProduct[]
//   locationContacts    LocationContact[]
//   locationNotes       LocationNote[]
//   main                Boolean              @default(false)
//   generatedRatesheets GeneratedRatesheet[]
//   producerAdmins      ProducerAdmin[]
//   customerSales       CustomerSale[]
//   Invoices            Invoice[]

//   @@index([producerId])
//   @@index([name])
//   @@index([tsSalesRepId])
// }

// model LocationProduct {
//   Int                   String               @id @default(autoincrement())
//   createdAt            DateTime             @default(now())
//   updatedAt            DateTime             @updatedAt
//   name                 String
//   locationMarkups      LocationMarkup[]
//   locationId           String
//   location             ProducerLocation           @relation(fields: [locationId], references: [id], onDelete: Cascade)
//   rateOutputId         String?
//   ratesheetId          String?
//   generatedRatesheet   GeneratedRatesheet[]
//   generatedRatesheetId String?

//   @@index([locationId])
// }

// model LocationMarkup {
//   Int                String          @id @default(autoincrement())
//   createdAt         DateTime        @default(now())
//   updatedAt         DateTime        @updatedAt
//   termValue         String
//   markupValue       String
//   locationProductId String
//   locationProduct   LocationProduct @relation(fields: [locationProductId], references: [id], onDelete: Cascade)

//   @@index([locationProductId])
// }

// model LocationNote {
//   Int         String     @id @default(autoincrement())
//   createdAt  DateTime   @default(now())
//   updatedAt  DateTime   @updatedAt
//   note       String     @db.LongText
//   locationId String
//   location   ProducerLocation @relation(fields: [locationId], references: [id], onDelete: Cascade)

//   @@index([locationId])
// }

// model LocationContact {
//   Int           String        @id @default(autoincrement())
//   createdAt    DateTime      @default(now())
//   updatedAt    DateTime      @updatedAt
//   email        String
//   firstName    String
//   lastName     String
//   phone        String?
//   role         String
//   title        String?
//   locationId   String
//   location     ProducerLocation?   @relation(fields: [locationId], references: [id], onDelete: Cascade)
//   spiffProduct SpiffProduct?

//   @@unique([email, locationId])
//   @@index([locationId])
// }

// model ProducerAgreementSentBy {
//   Int            String   @id @default(autoincrement())
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   senderName    String
//   producerName  String
//   producerEmail String
// }

// // model Customer {
// Int   id           String         @id @default(autoincrement())
// //   createdAt    DateTime       @default(now())
// //   updatedAt    DateTime       @updatedAt
// //   firstName    String
// //   lastName     String
// //   email        String
// //   phone        String?
// //   address      String
// //   city         String
// //   state        String
// //   zip          String
// //   country      String        
// //   customerSale CustomerSale[]
// // }

// model Truck {
//   Int             String         @id @default(autoincrement())
//   createdAt       DateTime       @default(now())
//   updatedAt       DateTime       @updatedAt
//   year            String
//   make            String
//   model           String
//   gvwr            String
//   mileage         String
//   vehicleType     String?
//   fuelType        String?
//   apuMake         String?
//   apuSerialNum    String?
//   apuHours        String?
//   engineSerialNum String?
//   customerSale    CustomerSale[]
// }

// model Lienholder {
//   Int           String         @id @default(autoincrement())
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   name         String
//   address      String?
//   city         String?
//   state        String?
//   zip          String?
//   country      String?       
//   phone        String?
//   email        String?
//   customerSale CustomerSale[]
// }

// model WarrantyProduct {
//   Int              String           @id @default(autoincrement())
//   createdAt       DateTime         @default(now())
//   updatedAt       DateTime         @updatedAt
//   name            String
//   wholesaleCost   String?
//   termLength      String?
//   termUnit        String?
//   warrantyOptions WarrantyOption[]
//   customerSale    CustomerSale[]
// }

// model WarrantyOption {
//   Int                String           @id @default(autoincrement())
//   createdAt         DateTime         @default(now())
//   updatedAt         DateTime         @updatedAt
//   name              String
//   wholesaleCost     String?
//   warrantyProduct   WarrantyProduct? @relation(fields: [warrantyProductId], references: [id])
//   warrantyProductId String?

//   @@index([warrantyProductId])
// }

// model GapProduct {
//   Int            String         @id @default(autoincrement())
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt
//   name          String
//   wholesaleCost String?
//   termLength    String?
//   termUnit      String?
//   customerSale  CustomerSale[]
// }

// model FutureProduct {
//   Int            String   @id @default(autoincrement())
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   name          String
//   wholesaleCost String?
//   termLength    String?
//   termUnit      String?
// }

// model FinanceProduct {
//   Int            String         @id @default(autoincrement())
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt
//   totalCost     String
//   totalOwed     String?
//   totalPaid     String?
//   paymentAmount String
//   frequency     Frequency      @default(MONTHLY)
//   financeLength String
//   customerSale  CustomerSale[]
// }

// model InspectionForm {
//   Int           String         @id @default(autoincrement())
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   fileId       String         @unique
//   customerSale CustomerSale[]
// }

// model WarrantyAgreement {
//   Int           String         @id @default(autoincrement())
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   fileId       String         @unique
//   vin          String         @unique
//   customerSale CustomerSale[]
// }

// model CustomerSale {
//   Int                 String             @id @default(autoincrement())
//   createdAt          DateTime           @default(now())
//   updatedAt          DateTime           @updatedAt
//   totalCost          String?
//   customerId         String
//   customer           Customer           @relation(fields: [customerId], references: [id])
//   lienholderId       String?
//   lienholder         Lienholder?        @relation(fields: [lienholderId], references: [id])
//   truckVin           String
//   truck              Truck              @relation(fields: [truckVin], references: [vin])
//   warrantyProductId  String?
//   warrantyProduct    WarrantyProduct?   @relation(fields: [warrantyProductId], references: [id])
//   gapProductId       String?
//   gapProduct         GapProduct?        @relation(fields: [gapProductId], references: [id])
//   financeProductId   String?
//   financeProduct     FinanceProduct?    @relation(fields: [financeProductId], references: [id])
//   inspectionFormId   String?
//   inspectionForm     InspectionForm?    @relation(fields: [inspectionFormId], references: [id])
//   warrantyAgreementId String?
//   warrantyAgreement   WarrantyAgreement?  @relation(fields: [warrantyAgreementId], references: [id])
//   status             CustomerSaleStatus @default(PENDING)
//   Invoice            Invoice[]
//   producerAdminId    String
//   producerAdmin      ProducerAdmin      @relation(fields: [producerAdminId], references: [id])
//   locationId         String
//   location           ProducerLocation         @relation(fields: [locationId], references: [id])

//   @@index([customerId])
//   @@index([lienholderId])
//   @@index([truckVin])
//   @@index([warrantyProductId])
//   @@index([gapProductId])
//   @@index([financeProductId])
//   @@index([inspectionFormId])
//   @@index([warrantyAgreementId])
//   @@index([producerAdminId])
//   @@index([locationId])
// }

// model Invoice {
//   Int              String           @id @default(autoincrement())
//   createdAt       DateTime         @default(now())
//   updatedAt       DateTime         @updatedAt
//   totalAmount     String
//   dueDate         String
//   paymentDate     String?
//   customerSaleId  String
//   customerSale    CustomerSale     @relation(fields: [customerSaleId], references: [id])
//   invoicePayment  InvoicePayment[]
//   bundleId        String?
//   bundle          Bundle?          @relation(fields: [bundleId], references: [id])
//   producerAdminId String
//   producerAdmin   ProducerAdmin    @relation(fields: [producerAdminId], references: [id])
//   locationId      String
//   location        ProducerLocation       @relation(fields: [locationId], references: [id])

//   @@index([customerSaleId])
//   @@index([bundleId])
//   @@index([producerAdminId])
//   @@index([locationId])
// }

// model InvoicePayment {
//   Int            String   @id @default(autoincrement())
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   paymentAmount String
//   paymentDate   String
//   invoiceId     String
//   invoice       Invoice  @relation(fields: [invoiceId], references: [id])

//   @@index([invoiceId])
// }

// model SpiffProduct {
//   Int                String          @id @default(autoincrement())
//   createdAt         DateTime        @default(now())
//   updatedAt         DateTime        @updatedAt
//   amountDue         String
//   paidDate          String?
//   locationContactId String          @unique
//   locationContact   LocationContact @relation(fields: [locationContactId], references: [id])

//   @@index([locationContactId])
// }

// model GeneratedRatesheet {
//   Int                String           @id @default(autoincrement())
//   createdAt         DateTime         @default(now())
//   updatedAt         DateTime         @updatedAt
//   locationId        String
//   location          ProducerLocation       @relation(fields: [locationId], references: [id])
//   locationProductId String?
//   locationProduct   LocationProduct? @relation(fields: [locationProductId], references: [id])

//   @@index([locationId])
//   @@index([locationProductId])
// }

// model Bundle {
//   Int          String    @id @default(autoincrement())
//   createdAt   DateTime  @default(now())
//   updatedAt   DateTime  @updatedAt
//   totalAmount String
//   dueDate     String
//   paymentDate String?
//   invoices    Invoice[]
// }

// enum CustomerSaleStatus {
//   ACTIVE
//   PENDING
//   INACTIVE
//   QUOTE
// }

// enum Frequency {
//   WEEKLY
//   BIWEEKLY
//   MONTHLY
//   YEARLY
//   BIYEARLY
//   QUARTERLY
// }

// enum ProducerStatus {
//   STARTED
//   PENDING
//   ACTIVE
//   INACTIVE
// }

// enum LocationContactRole {
//   LOCATION_ADMIN
//   SALES_MANAGER
//   SALES_INDIVIDUAL
//   OTHER
// }
